{"version":3,"sources":["assets/beep.mp3","components/Timer.js","components/App.js","index.js"],"names":["Timer","props","useState","counter","setCounter","phase","setPhase","cycle","setCycle","useEffect","timerId","setTimeout","clearTimeout","Audio","soundfile","play","document","body","style","handleStop","seconds","m","s","second","minute","displayTime","attentionPhase","App","numOfCycle","setNumOfCycle","isRunning","setIsRunning","onSubmit","e","preventDefault","className","type","id","value","onChange","event","target","min","max","onClick","ReactDOM","render","getElementById"],"mappings":"qJAAe,G,KAAA,IAA0B,kC,OCI1B,SAASA,EAAMC,GAE1B,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAASD,EAAMM,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KAEe,IAAZL,GACII,EAAM,IACLH,EAAW,MACXI,EAASD,EAAM,IAIvBE,qBAAU,WACN,GAAGN,EAAU,EAAI,CACb,IAAMO,EAAUC,YAAW,kBAAMP,EAAWD,EAAU,KAAI,KAE1D,OAAO,WACHS,aAAaF,OAIpB,CAACP,IAENM,qBAAU,WAEHF,GAAS,GAAKJ,GAAW,IACZ,IAAIU,MAAMC,GAChBC,OACNJ,YAAW,WACK,IAAIE,MAAMC,GAChBC,SACP,KACHC,SAASC,KAAKC,MAAQ,uBACtBjB,EAAMkB,YAAW,MAGtB,CAACZ,EAAOJ,EAASF,IAsCpB,OACI,gCACI,6BAlBY,SAACmB,GACjB,GAAa,eAAVf,EAAuB,CACtB,IAAIgB,GAAKD,EAAUA,EAAU,IAAM,GAC/BE,EAAIF,EAAU,GAElB,OADYC,EAAE,EAAEA,EAAE,IAAKA,GAAK,OAASC,EAAE,EAAEA,EAAE,IAAIA,GAG/C,IAAIC,GAAUH,EAAU,KAAO,GAC3BI,GAAUJ,EAAU,KAAOA,EAAU,KAAO,IAAM,GAEtD,OADYI,EAAO,EAAEA,EAAO,IAAMA,GAAU,OAASD,EAAO,EAAEA,EAAO,IAAMA,GAStEE,CAAYtB,KAtCF,SAAAA,GAChBA,GAAW,GAAKA,GAAW,MACb,eAAVE,IACCC,EAAS,cACG,IAAIO,MAAMC,GAChBC,OACNC,SAASC,KAAKC,MAAQ,yBAI3Bf,EAAU,KAAOA,GAAW,OACd,eAAVE,IACCC,EAAS,cACG,IAAIO,MAAMC,GAChBC,OACNC,SAASC,KAAKC,MAAQ,yBAwBzBQ,CAAevB,GACfE,KCxCEsB,MAvCf,WAEE,MAAoCzB,mBAAS,GAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KACA,EAAkC3B,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KAUA,OACE,gCACE,uBAAMC,SAAU,SAACC,GAAOA,EAAEC,kBAA1B,UACE,iDACA,mCACEC,UAAU,kBACVC,KAAK,SACLC,GAAG,SACHC,MAAOV,EACPW,SAbR,SAA2BC,GACzBX,EAAcW,EAAMC,OAAOH,QAarBI,IAAI,IACJC,IAAI,KACAb,EAAY,CAAE,SAAa,QAAW,KAG3CA,EACD,wBAAQK,UAAU,cAAcS,QAAS,WAAOb,GAAa,GAAOf,SAASC,KAAKC,MAAQ,wBAA1F,SAAmH,mBAAGiB,UAAU,cAAb,oBAChH,wBAAQA,UAAU,eAAeS,QAAS,WAAOb,GAAa,IAA9D,SAAsE,mBAAGI,UAAU,cAAb,wBAI1EL,GAAa,cAAC9B,EAAD,CAAO8B,UAAWA,EAAWvB,MAAOqB,EAAYT,WA7BlE,SAAoBW,GAClBC,EAAaD,UCNjBe,IAASC,OACP,cAAC,EAAD,IACA9B,SAAS+B,eAAe,U","file":"static/js/main.717c2ddd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beep.c509dda8.mp3\";","import React, {useState, useEffect} from 'react'\r\nimport '../styles.css'\r\nimport soundfile from '../assets/beep.mp3'\r\n\r\nexport default function Timer(props) {\r\n\r\n    const [counter, setCounter] = useState(1800)\r\n    const [phase, setPhase] = useState('')\r\n    const [cycle, setCycle] = useState(props.cycle)\r\n\r\n    if(counter === 0) {\r\n        if(cycle-1) {\r\n            setCounter(1800)\r\n            setCycle(cycle-1)\r\n        }\r\n     }\r\n\r\n    useEffect(() => {\r\n        if(counter > 0 ) {\r\n            const timerId = setTimeout(() => setCounter(counter - 1), 1000)\r\n\r\n            return function cleanup() {\r\n                clearTimeout(timerId)\r\n            }\r\n        }\r\n\r\n      }, [counter]);\r\n\r\n    useEffect(() => {\r\n        \r\n        if(cycle <= 1 && counter <= 0) {\r\n            var audio = new Audio(soundfile)\r\n            audio.play()\r\n            setTimeout(() => {\r\n                var audio = new Audio(soundfile)\r\n                audio.play() \r\n            }, 1000)\r\n            document.body.style = 'background : #F6F5F5'\r\n            props.handleStop(false)\r\n        }\r\n        \r\n    }, [cycle, counter, props])\r\n\r\n    const attentionPhase = counter => {\r\n        if(counter >= 0 && counter <= 300) {\r\n            if(phase !== 'relax mode') {\r\n                setPhase('relax mode')\r\n                let audio = new Audio(soundfile)\r\n                audio.play()\r\n                document.body.style = 'background : #EE6F57'\r\n            }\r\n        }\r\n\r\n        if(counter > 300 && counter <= 1800) {\r\n            if(phase !== 'focus mode') {\r\n                setPhase('focus mode')\r\n                let audio = new Audio(soundfile)\r\n                audio.play()\r\n                document.body.style = 'background : #1F3C88'\r\n            }\r\n        }\r\n    }\r\n\r\n    const displayTime = (seconds) => {     \r\n        if(phase === 'relax mode'){\r\n            let m = (seconds - seconds % 60) / 60\r\n            let s = seconds % 60\r\n            let time = (m>9?m:'0'+ m) + \" : \" + (s>9?s:'0'+s) \r\n            return time\r\n        } else {\r\n            let second = (seconds - 300) % 60\r\n            let minute = (seconds - 300 - (seconds - 300) % 60) / 60\r\n            let time = (minute>9?minute:'0' + minute) + \" : \" + (second>9?second:'0' + second)\r\n            return time\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{displayTime(counter)}</h1>\r\n            {attentionPhase(counter)}\r\n            {phase}\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\nimport '../styles.css'\nimport Timer from './Timer'\n\nfunction App() {\n\n  const [numOfCycle, setNumOfCycle] = useState(1)\n  const [isRunning, setIsRunning] = useState(false)\n\n  function handleStop(isRunning) {\n    setIsRunning(isRunning)\n  }\n\n  function handleValueChange(event) {\n    setNumOfCycle(event.target.value)\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e) => {e.preventDefault()}}>\n        <h1>Number of reps:</h1>\n        <input\n          className=\"input input-box\"\n          type=\"number\" \n          id=\"cycles\"\n          value={numOfCycle} \n          onChange={handleValueChange}\n          min=\"1\" \n          max=\"4\"\n          {...isRunning ? { 'readOnly' : 'true' } : {} }\n        />\n\n        {isRunning ? \n        <button className='button stop' onClick={() => {setIsRunning(false);document.body.style = 'background : #F6F5F5'}}><i className='button-text'>Stop</i></button> \n          :<button className='button start' onClick={() => {setIsRunning(true)}}><i className='button-text'>Start</i></button> \n        }\n\n      </form>\n      {isRunning && <Timer isRunning={isRunning} cycle={numOfCycle} handleStop={handleStop}/>}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}